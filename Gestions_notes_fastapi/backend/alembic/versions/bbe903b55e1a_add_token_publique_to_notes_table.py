"""Add token_publique to notes table

Revision ID: bbe903b55e1a
Revises: 
Create Date: 2025-08-10 09:35:07.232364

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bbe903b55e1a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_index(op.f('ix_tags_nom'), table_name='tags')
    op.drop_table('tags')
    op.drop_table('note_tags')
    op.alter_column('notes', 'contenu',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('notes', 'visibilite',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('notes', 'token_publique',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_index(op.f('ix_notes_titre'), table_name='notes')
    op.drop_index(op.f('ix_notes_token_publique'), table_name='notes')
    op.drop_index(op.f('ix_notes_visibilite'), table_name='notes')
    op.add_column('partage_notes', sa.Column('utilisateur_id', sa.Integer(), nullable=False))
    op.add_column('partage_notes', sa.Column('partage_avec_utilisateur_id', sa.Integer(), nullable=False))
    op.add_column('partage_notes', sa.Column('permission', sa.String(length=50), nullable=True))
    op.drop_constraint(None, 'partage_notes', type_='foreignkey')
    op.drop_constraint(None, 'partage_notes', type_='foreignkey')
    op.create_foreign_key(None, 'partage_notes', 'utilisateurs', ['utilisateur_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'partage_notes', 'utilisateurs', ['partage_avec_utilisateur_id'], ['id'], ondelete='CASCADE')
    op.drop_column('partage_notes', 'can_edit')
    op.drop_column('partage_notes', 'partage_avec_utilisateurs')
    op.drop_column('partage_notes', 'partage_par_utilisateur_id')
    op.drop_column('partage_notes', 'can_read')
    op.drop_index(op.f('ix_utilisateurs_email'), table_name='utilisateurs')
    op.drop_index(op.f('ix_utilisateurs_id'), table_name='utilisateurs')
    op.create_unique_constraint(None, 'utilisateurs', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'utilisateurs', type_='unique')
    op.create_index(op.f('ix_utilisateurs_id'), 'utilisateurs', ['id'], unique=False)
    op.create_index(op.f('ix_utilisateurs_email'), 'utilisateurs', ['email'], unique=1)
    op.add_column('partage_notes', sa.Column('can_read', sa.BOOLEAN(), nullable=True))
    op.add_column('partage_notes', sa.Column('partage_par_utilisateur_id', sa.INTEGER(), nullable=False))
    op.add_column('partage_notes', sa.Column('partage_avec_utilisateurs', sa.INTEGER(), nullable=False))
    op.add_column('partage_notes', sa.Column('can_edit', sa.BOOLEAN(), nullable=True))
    op.drop_constraint(None, 'partage_notes', type_='foreignkey')
    op.drop_constraint(None, 'partage_notes', type_='foreignkey')
    op.create_foreign_key(None, 'partage_notes', 'utilisateurs', ['partage_avec_utilisateurs'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'partage_notes', 'utilisateurs', ['partage_par_utilisateur_id'], ['id'])
    op.drop_column('partage_notes', 'permission')
    op.drop_column('partage_notes', 'partage_avec_utilisateur_id')
    op.drop_column('partage_notes', 'utilisateur_id')
    op.create_index(op.f('ix_notes_visibilite'), 'notes', ['visibilite'], unique=False)
    op.create_index(op.f('ix_notes_token_publique'), 'notes', ['token_publique'], unique=1)
    op.create_index(op.f('ix_notes_titre'), 'notes', ['titre'], unique=False)
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.alter_column('notes', 'token_publique',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
    op.alter_column('notes', 'visibilite',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('notes', 'contenu',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_table('note_tags',
    sa.Column('note_id', sa.INTEGER(), nullable=True),
    sa.Column('tag_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE')
    )
    op.create_table('tags',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('nom', sa.VARCHAR(length=100), nullable=False),
    sa.Column('date_creation', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_nom'), 'tags', ['nom'], unique=False)
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    # ### end Alembic commands ###
